---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const events = await getCollection('events');
  return events.map((event) => ({
    params: { slug: event.slug },
    props: { event },
  }));
}

const { event } = Astro.props;
const { Content } = await event.render();

const formattedDate = event.data.date.toLocaleDateString('en-AU', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

const endDate = event.data.endDate
  ? event.data.endDate.toLocaleDateString('en-AU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    })
  : null;
---

<Layout title={event.data.title}>
  <article class="event-detail">
    <a href="/events" class="back-link">
      <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd"/>
      </svg>
      Back to events
    </a>

    <div class="event-header">
      <span class="event-type-badge">{event.data.type}</span>
      {event.data.featured && <span class="featured-badge">Featured</span>}
    </div>

    <h1>{event.data.title}</h1>

    <div class="event-meta">
      <div class="meta-item">
        <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
        </svg>
        <span>{formattedDate}{endDate && <> - {endDate}</>}</span>
      </div>
      {event.data.location && (
        <div class="meta-item">
          <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"/>
          </svg>
          <span>{event.data.location}</span>
        </div>
      )}
    </div>

    {event.data.image && event.data.image !== '/images/meeting.jpg' && event.data.image !== '/images/workshop.jpg' && (
      <img src={event.data.image} alt={event.data.title} class="event-image" />
    )}

    <div class="event-content">
      <Content />
    </div>

    {event.data.registrationLink && (
      <div class="registration">
        <a href={event.data.registrationLink} class="register-button" target="_blank" rel="noopener noreferrer">
          Register Now
          <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"/>
          </svg>
        </a>
      </div>
    )}
  </article>
</Layout>

<style>
  .event-detail {
    max-width: 800px;
    margin: 0 auto;
    padding: 3rem 0 5rem;
  }

  .back-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    text-decoration: none;
    color: var(--text-medium);
    font-weight: 500;
    font-size: 0.9375rem;
    margin-bottom: 2rem;
    transition: all 0.2s ease;
  }

  .back-link:hover {
    color: var(--primary);
    gap: 0.75rem;
  }

  .back-link svg {
    width: 18px;
    height: 18px;
  }

  .event-header {
    display: flex;
    gap: 0.5rem;
    margin-bottom: 1.25rem;
  }

  .event-type-badge {
    display: inline-block;
    padding: 0.375rem 0.875rem;
    border-radius: 6px;
    background: var(--bg-accent);
    color: var(--primary);
    font-size: 0.8125rem;
    font-weight: 600;
    text-transform: capitalize;
    letter-spacing: 0.02em;
    border: 1px solid rgba(0, 102, 204, 0.2);
  }

  .featured-badge {
    display: inline-block;
    padding: 0.375rem 0.875rem;
    border-radius: 6px;
    background: linear-gradient(135deg, #fbbf24, #f59e0b);
    color: white;
    font-size: 0.8125rem;
    font-weight: 600;
    text-transform: capitalize;
    letter-spacing: 0.02em;
  }

  h1 {
    font-size: 2.5rem;
    font-weight: 800;
    margin: 0 0 1.5rem 0;
    color: var(--text-dark);
    line-height: 1.2;
    letter-spacing: -0.02em;
  }

  .event-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    padding: 1.25rem 0;
    margin-bottom: 2rem;
    border-top: 1px solid var(--border-light);
    border-bottom: 1px solid var(--border-light);
  }

  .meta-item {
    display: flex;
    align-items: center;
    gap: 0.625rem;
    color: var(--text-medium);
    font-size: 0.9375rem;
  }

  .meta-item svg {
    width: 18px;
    height: 18px;
    color: var(--primary);
    flex-shrink: 0;
  }

  .event-image {
    width: 100%;
    height: auto;
    border-radius: 16px;
    margin-bottom: 2.5rem;
    box-shadow: var(--shadow);
  }

  .event-content {
    margin-bottom: 2.5rem;
  }

  .event-content :global(h2) {
    font-size: 1.75rem;
    font-weight: 700;
    margin: 2.5rem 0 1rem 0;
    color: var(--text-dark);
    line-height: 1.3;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid var(--border-light);
  }

  .event-content :global(h3) {
    font-size: 1.375rem;
    font-weight: 600;
    margin: 2rem 0 0.75rem 0;
    color: var(--text);
  }

  .event-content :global(h4) {
    font-size: 1.125rem;
    font-weight: 600;
    margin: 1.5rem 0 0.5rem 0;
    color: var(--text);
  }

  .event-content :global(p) {
    margin-bottom: 1rem;
    color: var(--text-medium);
    font-size: 1rem;
    line-height: 1.7;
  }

  .event-content :global(ul),
  .event-content :global(ol) {
    margin: 1rem 0 1.5rem 0;
    padding-left: 1.5rem;
  }

  .event-content :global(li) {
    margin-bottom: 0.5rem;
    color: var(--text-medium);
    line-height: 1.6;
  }

  .event-content :global(li strong) {
    color: var(--text);
    font-weight: 600;
  }

  .event-content :global(a) {
    color: var(--primary);
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s ease;
    border-bottom: 1px solid transparent;
  }

  .event-content :global(a:hover) {
    color: var(--primary-dark);
    border-bottom-color: var(--primary);
  }

  .registration {
    text-align: center;
    margin: 3rem 0 2rem;
  }

  .register-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem 2rem;
    background: var(--gradient-primary);
    color: white;
    text-decoration: none;
    border-radius: 12px;
    font-weight: 600;
    font-size: 1.0625rem;
    transition: all 0.3s ease;
    box-shadow: 0 4px 12px rgba(0, 102, 204, 0.25);
  }

  .register-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(0, 102, 204, 0.35);
  }

  .register-button svg {
    width: 20px;
    height: 20px;
    transition: transform 0.3s ease;
  }

  .register-button:hover svg {
    transform: translateX(4px);
  }

  @media (max-width: 768px) {
    .event-detail {
      padding: 2rem 0 3rem;
    }

    h1 {
      font-size: 2rem;
    }

    .event-content :global(h2) {
      font-size: 1.5rem;
      margin-top: 2rem;
    }

    .event-content :global(h3) {
      font-size: 1.25rem;
    }

    .event-meta {
      flex-direction: column;
      gap: 0.75rem;
    }
  }
</style>